ROUTINE UPDATE_MOTION_BACKEND(target_pos: XYZWPR;
linear_path: BOOLEAN;
interrupt_current_motion: BOOLEAN)

CONST
	PR_XYZWPR = 41
	PR_XYZWPR_SEC = 42
	R_LIN = 6
	R_SKIP = 5
	R_NEW = 7
	
BEGIN
	
IF(interrupt_current_motion) THEN
		SET_INT_REG(R_SKIP, 1, STATUS)
	ELSE
		SET_INT_REG(R_SKIP, 0, STATUS)
	ENDIF
	
	IF(linear_path) THEN
		SET_INT_REG(R_LIN, 1, STATUS)
	ELSE
		SET_INT_REG(R_LIN, 0, STATUS)
	ENDIF
	
	SET_POS_REG(PR_XYZWPR, target_pos, STATUS)
	SET_INT_REG(R_NEW, 1, STATUS)

END UPDATE_MOTION_BACKEND

ROUTINE CORE_MOVE(coords_6d: ARRAY[*] OF REAL;
linear_path: BOOLEAN;
interrupt_current_motion: BOOLEAN;
response_file: FILE)
	
VAR
	target_pos: XYZWPR
	current_pos: XYZWPR
	jnt: JOINTPOS
	jnt_status: INTEGER
	jnt_array: ARRAY[6] OF REAL
	temp_int: INTEGER
	temp_real: REAL

BEGIN	
	$GROUP[1].$UTOOL = $MNUTOOL[1,1] --uTool 1
	$GROUP[1].$UFRAME = $MNUFRAME[1,1] --uFrame 1
	current_pos = CURPOS(0,0);
	jnt = CURJPOS(0,0);
	CNV_JPOS_REL(jnt, jnt_array, jnt_status)
	
	-- start from old position instance
	target_pos = current_pos
	-- overwrite specific value
	target_pos.x = coords_6d[1]
	target_pos.y = coords_6d[2]
	target_pos.z = coords_6d[3]
	target_pos.w = coords_6d[4]
	target_pos.p = coords_6d[5]
	target_pos.r = coords_6d[6]
	
	UPDATE_MOTION_BACKEND(target_pos, linear_path, interrupt_current_motion)

	IF (STATUS <> 0) OR (jnt_status <> 0) THEN
		WRITE response_file ( '{"result":"failed", "reason":"Could not update target position register"}')
	ELSE
		GET_REG(8, FALSE, temp_int, temp_real, STATUS)
		WRITE response_file (  '{"result":"success"', 
				', "x":', current_pos.x,
				', "y":', current_pos.y,
				', "z":', current_pos.z,
				', "w":', current_pos.w,
				', "p":', current_pos.p,
				', "r":', current_pos.r,
				', "j1":', jnt_array[1],
				', "j2":', jnt_array[2],
				', "j3":', jnt_array[3],
				', "j4":', jnt_array[4],
				', "j5":', jnt_array[5],
				', "j6":', jnt_array[6],
				', "count":', temp_int,
				'}')
	ENDIF
	
END CORE_MOVE

